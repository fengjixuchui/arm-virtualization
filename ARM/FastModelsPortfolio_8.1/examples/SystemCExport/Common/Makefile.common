#
# Makefile.common - Common Makefile rules included in examples Makefiles.
#
# Copyright 2012 ARM Limited.
# All rights reserved.
#

# Environment checks
ifeq ($(MAXCORE_HOME),)
    $(error MAXCORE_HOME: undefined variable)
endif
ifeq ($(PVLIB_HOME),)
    $(error PVLIB_HOME: undefined variable)
endif
ifeq ($(SYSTEMC_HOME),)
    $(error SYSTEMC_HOME: undefined variable)
endif
ifeq ($(TLM_HOME),)
    $(error TLM_HOME: undefined variable)
endif

# Globals
OS = $(shell uname)
ifeq ($(OS),Linux)
    ARCH = linux
else
    $(error $OS: unknown architecture)
endif

# number of cpus to build
J = $(shell grep -c processor /proc/cpuinfo)

# Determine architecture from target's suffix
%_32: BITNESS = 32
%_64: BITNESS = 64
%_32_clean: BITNESS = 32
%_64_clean: BITNESS = 64

BITNESS_IN_NAME_32 =
BITNESS_IN_NAME_64 = 64
BITNESS_IN_NAME = $(BITNESS_IN_NAME_$(BITNESS))

# Determine regime from target's prefix
REGIME_dbg = Debug
REGIME_rel = Release
REGIME = $(REGIME_$(word 1, $(subst _, ,$@)))

# Determine compiler flags from target's prefix
CXXFLAGS_dbg = -ggdb3 -DSIMGEN_DEBUG
CXXFLAGS_rel = -O3 -fomit-frame-pointer -DNDEBUG
%_32: CXXFLAGS_rel += -march=pentium-m -mtune=nocona -mfpmath=sse -msse2
CXXFLAGS += $(CXXFLAGS_$(word 1, $(subst _, ,$@)))

# Determine compiler version to use from target
GCC_VER_gcc41 = 4.1
GCC_VER_gcc44 = 4.4
GCC_VER = $(GCC_VER_$(word 2, $(subst _, ,$@)))

# Determine configuration
CONFIG=Linux$(BITNESS_IN_NAME)-$(REGIME)-GCC-$(GCC_VER)

# Check current/specified compiler version is as determined
CXX_VER := $(shell $(CXX) -dumpversion 2> /dev/null | \
                   sed -e "s/\([0-9]*\.[0-9]*\)\.[0-9]*/\1/")
ifneq ($(origin CXX),default)
    CXX_FROM = specified as '$(CXX)'
else
    CXX_FROM = found in $$PATH
endif
CXX_CHECK = \
	$(if $(findstring $(CXX_VER),$(GCC_VER)), , \
	     $(warning Compiler $(CXX_FROM) GCC $(CXX_VER) does not \
		 		   match configured compiler GCC $(GCC_VER).  This \
				   might lead to build issues.))
%_32: override CXXFLAGS += $(CXX_CHECK)
%_64: override CXXFLAGS += $(CXX_CHECK)

# Determine compiler flags
CXXFLAGS += -m$(BITNESS) -pthread -DSC_INCLUDE_DYNAMIC_PROCESSES -Wall \
			-I$(PVLIB_HOME)/include/fmruntime -I$(SYSTEMC_HOME)/include \
			-I$(TLM_HOME)/include/tlm -I$(MAXCORE_HOME)/AMBA-PV/include

# Determine linker flags
LDFLAGS += -L$(PVLIB_HOME)/lib/Linux$(BITNESS_IN_NAME)_GCC-$(GCC_VER) \
           -L$(SYSTEMC_HOME)/lib/Linux$(BITNESS_IN_NAME)_GCC-$(GCC_VER)

# Determine additional simgen flags
ifneq ($(origin CXX),default)
    override SIMGENFLAGS += --gcc-path $(CXX)
endif

# Default targets
DBG = dbg_gcc41_32
REL = rel_gcc41_32

# Default rules

.PHONY: all dbg rel clean

all: rel

dbg:
	$(MAKE) $(MAKEFLAGS) $(DBG)

rel:
	$(MAKE) $(MAKEFLAGS) $(REL)

clean:
	$(MAKE) $(MAKEFLAGS) $(DBG)_clean
	$(MAKE) $(MAKEFLAGS) $(REL)_clean

