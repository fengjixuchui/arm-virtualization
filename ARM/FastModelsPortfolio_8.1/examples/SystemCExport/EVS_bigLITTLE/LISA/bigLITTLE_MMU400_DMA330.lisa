// This file was generated by System Generator Canvas
// --------------------------------------------------
component bigLITTLE_MMU400_DMA330
{
    composition
    {
        ambapv2pvbus_mmu400_pvbus_m : AMBAPV2PVBus();
        pvbus2ambapv_mmu400_pvbus_m : PVBus2AMBAPV();
        
        ambapv2pvbus_mmu400_apb4_control : AMBAPV2PVBus();
        pvbus2ambapv_mmu_apb4_control : PVBus2AMBAPV();
        
        sgsignal2ambapvsignal_interrupt_cfg_flt_irpt_ns : SGSignal2AMBAPVSignal();
        ambapvsignal2sgsignal_interrupt_cfg_flt_irpt_ns : AMBAPVSignal2SGSignal();

        sgsignal2ambapvsignal_interrupt_cfg_flt_irpt_s : SGSignal2AMBAPVSignal();
        ambapvsignal2sgsignal_interrupt_cfg_flt_irpt_s : AMBAPVSignal2SGSignal();

        sgsignal2ambapvsignal_interrupt_cxt_irpt_ns : SGSignal2AMBAPVSignal();
        ambapvsignal2sgsignal_interrupt_cxt_irpt_ns : AMBAPVSignal2SGSignal();

        sgsignal2ambapvsignal_interrupt_glbl_flt_irpt_ns : SGSignal2AMBAPVSignal();
        ambapvsignal2sgsignal_interrupt_glbl_flt_irpt_ns : AMBAPVSignal2SGSignal();

        sgsignal2ambapvsignal_interrupt_glbl_flt_irpt_s : SGSignal2AMBAPVSignal();
        ambapvsignal2sgsignal_interrupt_glbl_flt_irpt_s : AMBAPVSignal2SGSignal();
        
        sgsignal2ambapvsignal_reset_in : SGSignal2AMBAPVSignal();
        ambapvsignal2sgsignal_reset_in : AMBAPVSignal2SGSignal();
        
        mmu400: MMU_400(
            "pvbus_m_is_ace_lite"=true,
            "tlb_depth".default=0,
            "number_of_contexts"=7,
            "number_of_smrs"=16,
            "ptw_has_separate_port"=false,
            "pvbus_ptw_m_is_ace_lite"=true,
            "use_ssd_determination_table"=true,
            "stream_id_width"=4,
            "programmable_secure_by_default_ssd_indices"="",
            "programmable_non_secure_by_default_ssd_indices"="0-15",
            "always_secure_ssd_indices"="",
            "percent_tlbstatus_commits"=10,
            "dump_unpredictablity_in_user_flags"=false,

            // bit[3] means is_read
            "label0_read_stream_id" =(0 | 8),
            "label0_write_stream_id"=(0 | 0),
            "label1_read_stream_id" =(1 | 8),
            "label1_write_stream_id"=(1 | 0),
            "label2_read_stream_id" =(2 | 8),
            "label2_write_stream_id"=(2 | 0),
            "label3_read_stream_id" =(3 | 8),
            "label3_write_stream_id"=(3 | 0)
            );

        dmac0: PL330_DMAC("p_controller_boots".default=0, "p_controller_nsecure".default=true);  label0: Labeller( "label"=0 );
        dmac1: PL330_DMAC("p_controller_boots".default=0, "p_controller_nsecure".default=true);  label1: Labeller( "label"=1 );
        dmac2: PL330_DMAC("p_controller_boots".default=0, "p_controller_nsecure".default=true);  label2: Labeller( "label"=2 );
        dmac3: PL330_DMAC("p_controller_boots".default=0, "p_controller_nsecure".default=true);  label3: Labeller( "label"=3 );
    }
    connection
    {
        self.dmac0_pvbus_s => dmac0.pvbus_s;
        self.dmac0_pvbus_s_ns => dmac0.pvbus_s_ns;
        self.dmac1_pvbus_s => dmac1.pvbus_s;
        self.dmac1_pvbus_s_ns => dmac1.pvbus_s_ns;
        self.dmac2_pvbus_s => dmac2.pvbus_s;
        self.dmac2_pvbus_s_ns => dmac2.pvbus_s_ns;
        self.dmac3_pvbus_s => dmac3.pvbus_s;
        self.dmac3_pvbus_s_ns => dmac3.pvbus_s_ns;
        
        dmac0.pvbus_m => label0.pvbus_s;
        dmac1.pvbus_m => label1.pvbus_s;
        dmac2.pvbus_m => label2.pvbus_s;
        dmac3.pvbus_m => label3.pvbus_s;
        
        dmac0.irq_master_port => self.interrupts_from_dmac0;
        dmac1.irq_master_port => self.interrupts_from_dmac1;
        dmac2.irq_master_port => self.interrupts_from_dmac2;
        dmac3.irq_master_port => self.interrupts_from_dmac3;

        dmac0.irq_abort_master_port => self.master_interrupts_from_dmacs[0];
        dmac1.irq_abort_master_port => self.master_interrupts_from_dmacs[1];
        dmac2.irq_abort_master_port => self.master_interrupts_from_dmacs[2];
        dmac3.irq_abort_master_port => self.master_interrupts_from_dmacs[3];
        
        self.clk_in => dmac0.clk_in;
        self.clk_in => dmac1.clk_in;
        self.clk_in => dmac2.clk_in;
        self.clk_in => dmac3.clk_in;
        
        self.reset_in => dmac0.reset_in;
        self.reset_in => dmac1.reset_in;
        self.reset_in => dmac2.reset_in;
        self.reset_in => dmac3.reset_in;        
        
        self.reset_in => sgsignal2ambapvsignal_reset_in.sg_signal_s;
        sgsignal2ambapvsignal_reset_in.amba_pv_signal_m => self.amba_pv_mmu400_reset_in_m;
        self.amba_pv_mmu400_reset_in_s => ambapvsignal2sgsignal_reset_in.amba_pv_signal_s;
        ambapvsignal2sgsignal_reset_in.sg_signal_m => mmu400.reset_in;

        // interrupt_cfg_flt_irpt_ns
        mmu400.cfg_flt_irpt_ns                                           => sgsignal2ambapvsignal_interrupt_cfg_flt_irpt_ns.sg_signal_s;
        sgsignal2ambapvsignal_interrupt_cfg_flt_irpt_ns.amba_pv_signal_m => self.amba_pv_mmu400_interrupt_cfg_flt_irpt_ns_m;        
        self.amba_pv_mmu400_interrupt_cfg_flt_irpt_ns_s                  => ambapvsignal2sgsignal_interrupt_cfg_flt_irpt_ns.amba_pv_signal_s;
        ambapvsignal2sgsignal_interrupt_cfg_flt_irpt_ns.sg_signal_m      => self.interrupt_cfg_flt_irpt_ns;

        // interrupt_cfg_flt_irpt_s;
        mmu400.cfg_flt_irpt_s                                           => sgsignal2ambapvsignal_interrupt_cfg_flt_irpt_s.sg_signal_s;
        sgsignal2ambapvsignal_interrupt_cfg_flt_irpt_s.amba_pv_signal_m => self.amba_pv_mmu400_interrupt_cfg_flt_irpt_s_m;        
        self.amba_pv_mmu400_interrupt_cfg_flt_irpt_s_s                  => ambapvsignal2sgsignal_interrupt_cfg_flt_irpt_s.amba_pv_signal_s;
        ambapvsignal2sgsignal_interrupt_cfg_flt_irpt_s.sg_signal_m      => self.interrupt_cfg_flt_irpt_s;

        // interrupt_cxt_irpt_ns;
        mmu400.cxt_irpt_ns                                           => sgsignal2ambapvsignal_interrupt_cxt_irpt_ns.sg_signal_s;
        sgsignal2ambapvsignal_interrupt_cxt_irpt_ns.amba_pv_signal_m => self.amba_pv_mmu400_interrupt_cxt_irpt_ns_m;        
        self.amba_pv_mmu400_interrupt_cxt_irpt_ns_s                  => ambapvsignal2sgsignal_interrupt_cxt_irpt_ns.amba_pv_signal_s;
        ambapvsignal2sgsignal_interrupt_cxt_irpt_ns.sg_signal_m      => self.interrupt_cxt_irpt_ns;
        
        // interrupt_glbl_flt_irpt_ns;
        mmu400.glbl_flt_irpt_ns                                           => sgsignal2ambapvsignal_interrupt_glbl_flt_irpt_ns.sg_signal_s;
        sgsignal2ambapvsignal_interrupt_glbl_flt_irpt_ns.amba_pv_signal_m => self.amba_pv_mmu400_interrupt_glbl_flt_irpt_ns_m;        
        self.amba_pv_mmu400_interrupt_glbl_flt_irpt_ns_s                  => ambapvsignal2sgsignal_interrupt_glbl_flt_irpt_ns.amba_pv_signal_s;
        ambapvsignal2sgsignal_interrupt_glbl_flt_irpt_ns.sg_signal_m      => self.interrupt_glbl_flt_irpt_ns;
    
        // interrupt_glbl_flt_irpt_s;
        mmu400.glbl_flt_irpt_s                                           => sgsignal2ambapvsignal_interrupt_glbl_flt_irpt_s.sg_signal_s;
        sgsignal2ambapvsignal_interrupt_glbl_flt_irpt_s.amba_pv_signal_m => self.amba_pv_mmu400_interrupt_glbl_flt_irpt_s_m;        
        self.amba_pv_mmu400_interrupt_glbl_flt_irpt_s_s                  => ambapvsignal2sgsignal_interrupt_glbl_flt_irpt_s.amba_pv_signal_s;
        ambapvsignal2sgsignal_interrupt_glbl_flt_irpt_s.sg_signal_m      => self.interrupt_glbl_flt_irpt_s;
        
        self.mmu_apb4_control => pvbus2ambapv_mmu_apb4_control.pvbus_s;
        pvbus2ambapv_mmu_apb4_control.amba_pv_m => self.amba_pv_mmu400_abp4_control_m;
        self.amba_pv_mmu400_abp4_control_s => ambapv2pvbus_mmu400_apb4_control.amba_pv_s;
        ambapv2pvbus_mmu400_apb4_control.pvbus_m => mmu400.apb4_control;
        
        mmu400.pvbus_m => pvbus2ambapv_mmu400_pvbus_m.pvbus_s;
        mmu400.pvbus_ptw_m => pvbus2ambapv_mmu400_pvbus_m.pvbus_s;
        pvbus2ambapv_mmu400_pvbus_m.amba_pv_m => self.amba_pv_mmu400_pvbus_m_m;
        self.amba_pv_mmu400_pvbus_m_s => ambapv2pvbus_mmu400_pvbus_m.amba_pv_s;
        ambapv2pvbus_mmu400_pvbus_m.pvbus_m => self.pvbus_m;
    }
    
    master port<Signal> interrupt_cfg_flt_irpt_ns;
    master port<Signal> interrupt_cfg_flt_irpt_s;
    master port<Signal> interrupt_cxt_irpt_ns;
    master port<Signal> interrupt_glbl_flt_irpt_ns;
    master port<Signal> interrupt_glbl_flt_irpt_s;
    master port<Signal> interrupts_from_dmac0[32];
    master port<Signal> interrupts_from_dmac1[32];
    master port<Signal> interrupts_from_dmac2[32];
    master port<Signal> interrupts_from_dmac3[32];
    master port<Signal> master_interrupts_from_dmacs[4];
    slave port<ClockSignal> clk_in;
    slave port<Signal> reset_in;
    slave port<PVBus> dmac0_pvbus_s;
    slave port<PVBus> dmac0_pvbus_s_ns;
    slave port<PVBus> dmac1_pvbus_s;
    slave port<PVBus> dmac1_pvbus_s_ns;
    slave port<PVBus> dmac2_pvbus_s;
    slave port<PVBus> dmac2_pvbus_s_ns;
    slave port<PVBus> dmac3_pvbus_s;
    slave port<PVBus> dmac3_pvbus_s_ns;
    slave port<PVBus> mmu_apb4_control;
    master port<PVBus> pvbus_m;
    
    master port<AMBAPVSignal> amba_pv_mmu400_reset_in_m;
    slave port<AMBAPVSignal>  amba_pv_mmu400_reset_in_s;
    
    master port<AMBAPVSignal> amba_pv_mmu400_interrupt_cfg_flt_irpt_ns_m;
    slave port<AMBAPVSignal>  amba_pv_mmu400_interrupt_cfg_flt_irpt_ns_s;

    master port<AMBAPVSignal> amba_pv_mmu400_interrupt_cfg_flt_irpt_s_m;
    slave port<AMBAPVSignal>  amba_pv_mmu400_interrupt_cfg_flt_irpt_s_s;

    master port<AMBAPVSignal> amba_pv_mmu400_interrupt_cxt_irpt_ns_m;
    slave port<AMBAPVSignal>  amba_pv_mmu400_interrupt_cxt_irpt_ns_s;
        
    master port<AMBAPVSignal> amba_pv_mmu400_interrupt_glbl_flt_irpt_ns_m;
    slave port<AMBAPVSignal>  amba_pv_mmu400_interrupt_glbl_flt_irpt_ns_s;
    
    master port<AMBAPVSignal> amba_pv_mmu400_interrupt_glbl_flt_irpt_s_m;
    slave port<AMBAPVSignal>  amba_pv_mmu400_interrupt_glbl_flt_irpt_s_s;
    
    master port<AMBAPV> amba_pv_mmu400_abp4_control_m;
    slave port<AMBAPV>  amba_pv_mmu400_abp4_control_s;
    
    master port<AMBAPV> amba_pv_mmu400_pvbus_m_m;
    slave port<AMBAPV>  amba_pv_mmu400_pvbus_m_s;
}

