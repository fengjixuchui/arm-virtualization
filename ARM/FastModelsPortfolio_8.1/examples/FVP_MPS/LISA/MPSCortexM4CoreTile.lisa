// This file was generated by System Generator Canvas
// --------------------------------------------------

component MPSCortexM4CoreTile
{
    properties
    {
        version = "8.1.37";
        component_type = "System";
        description = "ARM Cortex-M4 Core Tile for MPS Baseboard.";
    }
    composition
    {
        uart3 : PL011_Uart("clock_rate"=25000000,"baud_rate"=115200,"uart_enable"=0);
        i2c_dvi : MPS_I2C();
        tsci : TSC2200();
        clk25MHz : ClockDivider("mul"=25000000,"div"=1);
        pl022_ssp : PL022_SSP();
        flashloader : FlashLoader("fname"=fname);
        ssram1 : RAMDevice("size"=0x400000);
        remapdecoder : RemapDecoder();
        flash : IntelStrataFlashJ3("size"=0x04000000);
        mpsinterruptreceiver : MPSInterruptReceiver();
        mps_sysregs : MPS_SysRegs();
        ssram0 : RAMDevice("size"=0x400000);
        BusMatrix : PVBusDecoder();
        clk100Mhz : ClockDivider("mul"=100000000,"div"=1);
        core : ARMCortexM4CT("NUM_IRQ"=32);
    }
    resources
    {
        PARAMETER { description("fname"), type(string), default("(none)") } fname;
    }
    connection
    {
        core.ticks => self.ticks;
        clk100Mhz.clk_out => core.clk_in;
        core.pvbus_m => BusMatrix.pvbus_s;
        self.clk_in => clk100Mhz.clk_in;
        mps_sysregs.leds => self.leds;
        self.int_in => mpsinterruptreceiver.int_in;
        self.int_num => mpsinterruptreceiver.int_num;
        mpsinterruptreceiver.int_out => core.intisr;
        flashloader.flash_device0 => flash.flashloader;
        remapdecoder.output_remap_clear => flash.pvbus;
        remapdecoder.output_remap_set => ssram1.pvbus;
        mps_sysregs.remap => remapdecoder.remap;
        self.clk_in => clk25MHz.clk_in;
        clk25MHz.clk_out => pl022_ssp.clk;
        self.lcd_layout => tsci.lcd_layout;
        self.touch_screen => tsci.touch_screen;
        tsci.PENIRQ => core.intisr[31];
        uart3.intr => core.intisr[30];
        pl022_ssp.txd => tsci.MISO;
        tsci.MOSI => pl022_ssp.rxd;
        mps_sysregs.user_switches => self.user_switches;
        uart3.serial_out => self.terminal;
        BusMatrix.pvbus_m_range[0x0..0x3fffff] => remapdecoder.input;
        BusMatrix.pvbus_m_range[0x18000000..0x1bffffff] => flash.pvbus;
        BusMatrix.pvbus_m_range[0x400000..0x3ffffff] => flash.pvbus[0x400000..0x3ffffff];
        BusMatrix.pvbus_m_range[0x10000000..0x103fffff] => ssram1.pvbus;
        BusMatrix.pvbus_m_range[0x10400000..0x107fffff] => ssram0.pvbus;
        BusMatrix.pvbus_m_range[0x1f000000..0x1f000fff] => mps_sysregs.pvbus;
        BusMatrix.pvbus_m_range[0x1f003000..0x1f003fff] => i2c_dvi.pvbus;
        BusMatrix.pvbus_m_range[0x1f004000..0x1f004fff] => pl022_ssp.pvbus;
        BusMatrix.pvbus_m_range[0x1f005000..0x1f005fff] => uart3.pvbus;
        BusMatrix.pvbus_m_range[0x20000000..0xdfffffff] => self.ahb[0x20000000..0xdfffffff];
        BusMatrix.pvbus_m_range[0xe0100000..0xffffffff] => self.ahb[0xe0100000..0xffffffff];
        clk25MHz.clk_out => uart3.clk_in_ref;
    }
    master port<InstructionCount> ticks;
    slave port<ClockSignal> clk_in;
    master port<ValueState> leds;
    addressable master port<PVBus> ahb;
    slave port<Signal> int_in;
    slave port<ValueState> int_num;
    slave port<LCDLayoutInfo> lcd_layout;
    slave port<MouseStatus> touch_screen;
    master port<ValueState> user_switches;
    master port<SerialData> terminal;
}
