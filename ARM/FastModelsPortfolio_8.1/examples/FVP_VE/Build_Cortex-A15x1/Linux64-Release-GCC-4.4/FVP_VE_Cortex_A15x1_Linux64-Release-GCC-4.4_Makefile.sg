# vim: ft=make
# Template for makefile generation.
# Copyright ARM Limited 2007-2011 All Rights Reserved.
#
# The Makefile generated from this template is designed to be invoke by simgen.
#

# Some targets are used for internal reasons and are therefore phony
# - scx        For collecting together SystemC export targets
# - clean      For cleaning the project
# - isim       Alias for isim_system
# - pre_comp   Alias for pre-compiled header target
# - post_build Post-build event target
.PHONY: scx clean pre_comp post_build

TOP_COMPONENT=FVP_VE_Cortex_A15x1
BUILD_DIR = ./Linux64-Release-GCC-4.4/
OUT_DIR = gen
CONFIG = Linux64-Release-GCC-4.4

# Dependencies are generated by the compiler, if they are present include them.
# GNU make 3.80 present on RHEL4 warns if an empty list of files is given to -include
# this is not useful as the biggest use for it is a lists of .d files which are
# generated by the build and won't exist on a fresh build. This is corrected in
# GNU make 3.81
-include WORKAROUND_FOR_MAKE_380_WARNING_EMPTY_FILES $(wildcard $(OUT_DIR)/*.d)

CXX = g++
AR  = ar
RANLIB = ranlib
CXXFLAGS_EXT = -pthread -O3 -Wall -pipe -Werror -m64 -fPIC
CPPFLAGS_EXT = -Igen -I$(PVLIB_HOME)/include -I$(MAXCORE_HOME)/AMBA-PV/include -I$(PVLIB_HOME)/include/fmruntime -I$(PVLIB_HOME)/include/fmruntime/eslapi -I$(PVLIB_HOME)/VFS2/C -I$(PVLIB_HOME)/examples/Common/LISA  -I../LISA/C/ -DSIMGEN_RELEASE=1 -DNDEBUG=1  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE

CONFIGURATION=Linux64-Release-GCC-4.4

LDLIBS = /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libarmctmodel.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libpvbus.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libcomponents.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/liblan91c111.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libz.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libfmruntime.a -ldl -lrt 
LDFLAGS = -pthread -Wl,--no-undefined -m64 -fPIC

APPLICATION=

# Objects used by all targets
COMMON_OBJECTS = gen/Comp_1.o gen/Comp_2.o gen/CADI_Ctors_DSO.o gen/ComponentsCADIFactory.o gen/VFS.o gen/VFSFileSystem.o gen/UIClass.o

# Objects specific to classic SystemC export
SC_OBJECTS      = 

# Object which are not safe to link into a DSO used by SCX
NONDSO_OBJECTS  = 

# Objects specific to MI SystemC export
SCX_OBJECTS     = 

# Objects specific to ISIM systems
ISIM_OBJECTS    = gen/IsimMain.o

isim: isim_system

pre_comp: 

# pre-compile not enabled



post_build:
	

gen/VFS.o: /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/VFS2/C/VFS.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/VFS.o  /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/VFS2/C/VFS.cpp

gen/VFSFileSystem.o: /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/VFS2/C/VFSFileSystem.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/VFSFileSystem.o  /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/VFS2/C/VFSFileSystem.cpp

gen/UIClass.o: /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/examples/Common/LISA/UIClass/UIClass.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/UIClass.o  /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/examples/Common/LISA/UIClass/UIClass.cpp

gen/Comp_1.o: gen/Comp_1.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/Comp_1.o  gen/Comp_1.cpp

gen/Comp_2.o: gen/Comp_2.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/Comp_2.o  gen/Comp_2.cpp

gen/CADI_Ctors_DSO.o: gen/CADI_Ctors_DSO.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT)  -O0 -MMD -c -o gen/CADI_Ctors_DSO.o  gen/CADI_Ctors_DSO.cpp

gen/ComponentsCADIFactory.o: gen/ComponentsCADIFactory.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/ComponentsCADIFactory.o  gen/ComponentsCADIFactory.cpp

gen/IsimMain.o: gen/IsimMain.cpp
	$(CXX)  $(CXXFLAGS_EXT)  $(CPPFLAGS_EXT) -MMD -c -o gen/IsimMain.o  gen/IsimMain.cpp



isim_system: $(COMMON_OBJECTS) $(NONDSO_OBJECTS) $(ISIM_OBJECTS) $(LDLIBS)
	$(CXX) -o $@ $(COMMON_OBJECTS) $(NONDSO_OBJECTS) $(ISIM_OBJECTS) $(LDFLAGS) $(LDLIBS)

libisim_system.a: $(COMMON_OBJECTS) $(NONDSO_OBJECTS)
	rm -f $@
	$(AR) cru $@ $(COMMON_OBJECTS) $(NONDSO_OBJECTS)
	$(RANLIB) $@

cadi_system_$(CONFIG).so: $(COMMON_OBJECTS) $(NONDSO_OBJECTS) $(LDLIBS)
	$(CXX) -shared  -o $@ $(COMMON_OBJECTS) $(NONDSO_OBJECTS) $(LDFLAGS) $(LDLIBS)  -Wl,--version-script=$(MAXCORE_HOME)/lib/version.expmap 

ifeq ($(LDLIBS),)
     AR_DIR=
else
     AR_DIR=__tmp__/*.*
endif

$(TOP_COMPONENT)-sc_sg_wrapper-$(CONFIG).a: $(SC_OBJECTS) $(NONDSO_OBJECTS) $(COMMON_OBJECTS)
	rm -f $@
	mkdir -p __tmp__ 
	cd __tmp__  && files='/home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libarmctmodel.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libpvbus.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libcomponents.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/liblan91c111.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libz.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libfmruntime.a' ; \
	for file in $$files ; do \
	   file $$file | grep 'archive' > /dev/null; \
	   if [ $$? -eq 1 ]; then (`cp $$file .`)  else (ar x $$file) fi; \
	done
	$(AR) cru $@ $(SC_OBJECTS) $(NONDSO_OBJECTS) $(COMMON_OBJECTS) $(AR_DIR)
	$(RANLIB) $@
	$(CXX) -shared -o $(TOP_COMPONENT)-sc_sg_wrapper-$(CONFIG).so $(SC_OBJECTS) $(NONDSO_OBJECTS) $(COMMON_OBJECTS) -m64 -fPIC /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libarmctmodel.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libpvbus.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libcomponents.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/liblan91c111.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libz.a /home/sxcheng/Workspace/kvm/ARM/FastModelsPortfolio_8.1/lib/Linux64_GCC-4.4/libfmruntime.a
	rm -rf __tmp__ 
	cp $(TOP_COMPONENT)-sc_sg_wrapper-$(CONFIG).so ..

scx: libscx.a libscx-$(TOP_COMPONENT)-$(CONFIG).a lib$(TOP_COMPONENT)-$(CONFIG).so

libscx.a: $(SCX_OBJECTS)
	$(AR) cru $@ $(SCX_OBJECTS)

libscx-$(TOP_COMPONENT)-$(CONFIG).a: $(NONDSO_OBJECTS)
	$(AR) cru $@ $(NONDSO_OBJECTS)
	$(RANLIB) $@

lib$(TOP_COMPONENT)-$(CONFIG).so: $(COMMON_OBJECTS) $(LDLIBS)
	$(CXX) -shared -o $@ $(COMMON_OBJECTS) $(LDFLAGS) $(LDLIBS)

clean:
	rm -f $(COMMON_OBJECTS) \
	$(SC_OBJECTS) \
	$(NONDSO_OBJECTS) \
	$(SCX_OBJECTS) \
	$(ISIM_OBJECTS) \
	isim isim_system \
	cadi_system_$(CONFIG).so \
	$(TOP_COMPONENT)-sc_sg_wrapper-$(CONFIG).a \
	$(TOP_COMPONENT)-sc_sg_wrapper-$(CONFIG).so \
	libscx.a \
	libscx-$(TOP_COMPONENT)-$(CONFIG).a \
	lib$(TOP_COMPONENT)-$(CONFIG).so
	rm -rf $(OUT_DIR)
	

