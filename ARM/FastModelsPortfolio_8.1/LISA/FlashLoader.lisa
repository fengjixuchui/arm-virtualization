/*
 * Copyright 2006-2009 ARM Limited. All rights reserved.
 */

// Sample implementation of a device that can preload a gzipped image into
// flash at startup.

component FlashLoader
{
    properties {
        version = "8.1.37";
        component_type = "Other";
        description = "A device that can preload a gzipped image into flash at startup";
        documentation_file = "../Docs/DUI0423O_fast_model_rm.pdf";
    }

    resources
    {
        PARAMETER { description("Filename (Default '(none)' means: Do not load any file. An empty string will cause a warning.)"), type(string), default("(none)") }  fname;
        PARAMETER { description("FilenameWrite (Default '(none)' means: Do not save any file. An empty string will cause a warning.)"), type(string), default("(none)") } fnameWrite;
    }

    master port<FlashLoaderPort> flash_device0;
    master port<FlashLoaderPort> flash_device1;
    master port<FlashLoaderPort> flash_device2;
    master port<FlashLoaderPort> flash_device3;

    behavior interconnect()
    {
        FlashLoader loader;
        uint32_t total_count = 0;

        if (fname == "(none)")
            return; // parameter default: no filename given: OK
        if (fname == "") 
        {
            // explicitly empty filename: print warning since this may be a mandatory config item which is empty by mistake
            message(MSG_WARNING, "%s: FlashLoader: fname parameter is empty. Nothing loaded.\n", getInstancePath().c_str());
            return;
        }
        if (loader.open(fname, OPEN_FOR_READ))
        {
            if (flash_device0.loadFlashFile.implemented()) total_count += flash_device0.loadFlashFile(&loader);
            if (flash_device1.loadFlashFile.implemented()) total_count += flash_device1.loadFlashFile(&loader);
            if (flash_device2.loadFlashFile.implemented()) total_count += flash_device2.loadFlashFile(&loader);
            if (flash_device3.loadFlashFile.implemented()) total_count += flash_device3.loadFlashFile(&loader);

            loader.close();
            message(MSG_INFO, "%s: FlashLoader: Loaded %dMB from file '%s'\n", getInstancePath().c_str(), total_count / (1024*1024), fname.c_str());
        }
        else 
        {
            message(MSG_FATAL_ERROR, "%s: FlashLoader: Error while reading file '%s'!\n", getInstancePath().c_str(), fname.c_str());
        }
    }
    
    behavior terminate()
    {
        FlashLoader loader;
        uint32_t total_count = 0;

        if (fnameWrite == "(none)")
            return; // parameter default: no filename given: OK
        if (fnameWrite == "") 
        {
            // explicitly empty filename: print warning since this may be a mandatory config item which is empty by mistake
            message(MSG_WARNING, "%s: FlashLoader: fnameWrite parameter is empty. Nothing saved.\n", getInstancePath().c_str());
            return;
        }
        if (loader.open(fnameWrite, OPEN_FOR_WRITE)) 
        {
            if (flash_device0.saveFlashFile.implemented()) total_count += flash_device0.saveFlashFile(&loader);
            if (flash_device1.saveFlashFile.implemented()) total_count += flash_device1.saveFlashFile(&loader);
            if (flash_device2.saveFlashFile.implemented()) total_count += flash_device2.saveFlashFile(&loader);
            if (flash_device3.saveFlashFile.implemented()) total_count += flash_device3.saveFlashFile(&loader);

            loader.close();
            message(MSG_INFO, "%s: FlashLoader: Saved %dMB to file '%s'\n", getInstancePath().c_str(), total_count / (1024*1024), fnameWrite.c_str());
        }
        else
        {
            message(MSG_FATAL_ERROR, "%s: FlashLoader: Error while writing file '%s'!\n", getInstancePath().c_str(), fnameWrite.c_str());
        }
    }
}
