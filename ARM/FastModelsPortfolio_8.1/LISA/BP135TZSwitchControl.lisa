/*
 * Copyright 2006 ARM Limited. All rights reserved.
 * Copyright 2007 ARM Limited. All rights reserved.
 */

// Internal TZSwitch control component for BP135

component BP135TZSwitchControl
{
    properties
    {
        version = "8.1.37";
        hidden = true;
        description = "Internal TZSwitch control component for BP135";
        documentation_file = "../Docs/DUI0423O_fast_model_rm.pdf";
    }
    
    resources
    {

    }
   
    slave port<Value> tzprot0Rx
    {
        behavior setValue(uint32_t value)
        {
            for (int i =0; i<8; i++)
            {
                // Test the ith bit is 0(secure) or 1(non-secure)
                if ((value>>i & 1) == 1) // Accessing none secure region
                {
                    controlSignal[i].routeAccesses(TZINPUT_NORMAL, TZROUTE_TO_PORT_A);
                }
                else  // Accessing secure region
                {
                    controlSignal[i].routeAccesses(TZINPUT_NORMAL, TZROUTE_ABORT);
                }
                    
            }
        }
    }
    
    slave port<Value> tzprot1Rx
    {
        behavior setValue(uint32_t value)
        {
            for (int i =0; i<8; i++)
            {
                // Test the ith bit is 0(secure) or 1(non-secure)
                if ((value>>i & 1) == 1) // Accessing none secure region
                {
                    controlSignal[i+8].routeAccesses(TZINPUT_NORMAL, TZROUTE_TO_PORT_A);
                }
                else  // Accessing secure region
                {
                    controlSignal[i+8].routeAccesses(TZINPUT_NORMAL, TZROUTE_ABORT);
                }
                
            }  
        }
    }
    
    master port<TZSwitchControl> controlSignal[16];
   
    behavior init()
    {
        for(int i=0; i<16; i++)
        {
            controlSignal[i].routeAccesses(TZINPUT_SECURE, TZROUTE_TO_PORT_A);
        }
    }
    
    behavior reset(int level)
    {
                for(int i=0; i<16; i++)
        {
            controlSignal[i].routeAccesses(TZINPUT_SECURE, TZROUTE_TO_PORT_A);
        }
    }
}
