// Copyright 2011 ARM Limited. All rights reserved.
//
// Disassembler adapter interface.

protocol CADIDisassemblerProtocol
{
    properties
    {
        version = "8.1.37";
        description = "This protocol can be used by LISA components to receive GetDisassembly() calls from a debugger. It forms the interface between a C++ stub and a LISA implementation.";
        documentation_file = "../Docs/DUI0423O_fast_model_rm.pdf";
    }
    
    includes
    {
        #include "eslapi/CADIDisassembler.h"
    }
    
    // Distinguish different types of disassembly
    slave behavior GetType(): eslapi::CADIDisassemblerType;

    // return number of modes
    slave behavior GetModeCount(): uint32_t;

    // Query names of all modes. Triggers callbacks to CADIDisassemblerCB::ReceiveModeName(), once for every mode.
    slave behavior GetModeNames(eslapi::CADIDisassemblerCB *callback_);

    // Get current execution mode. If modes are not supported by this target return 0. If modes are supported returns 0 < x <= GetModeCount().
    slave behavior GetCurrentMode(): uint32_t;

    // Retrieves source-level information. Triggers a call of CADIDisassemblerCB::ReceiveSourceReference().
    slave behavior GetSourceReferenceForAddress(eslapi::CADIDisassemblerCB *callback_, const eslapi::CADIAddr_t &address): eslapi::CADIDisassemblerStatus;

    // First address corresponding generated for the given source line.
    slave behavior GetAddressForSourceReference(const char *sourceFile, uint32_t sourceLine, eslapi::CADIAddr_t &address): eslapi::CADIDisassemblerStatus;

    // Function for standard type disassembly
    slave behavior GetDisassembly(eslapi::CADIDisassemblerCB *callback_,
                                  const eslapi::CADIAddr_t &address,
                                  eslapi::CADIAddr_t &nextAddr,
                                  const uint32_t mode,
                                  uint32_t desiredCount): eslapi::CADIDisassemblerStatus;
    
    // Query if an instruction is a call instruction
    slave behavior GetInstructionType(const eslapi::CADIAddr_t &address, eslapi::CADIDisassemblerInstructionType &insn_type): eslapi::CADIDisassemblerStatus;
}

